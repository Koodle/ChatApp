{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazim\\\\Desktop\\\\chatApp\\\\chat-frontend\\\\src\\\\components\\\\Router\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //Navigate - to navigate to a different Route \n//Outlet - allows you to do nested routes in App.js\n\nimport { Navigate, Outlet } from \"react-router-dom\"; //useSelector - to access the store\n\nimport { useSelector } from \"react-redux\"; //check if user is logged in before giving access to the home route\n//https://www.youtube.com/watch?v=0x8Dap2EIVE\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = () => {\n  _s();\n\n  const isLoggedIn = useSelector(state => state.authReducer.isLoggedIn); //<Outlet> Allows you to do nested routes in App.js\n\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 35\n  }, this);\n};\n\n_s(ProtectedRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/kazim/Desktop/chatApp/chat-frontend/src/components/Router/ProtectedRoute.js"],"names":["React","Navigate","Outlet","useSelector","ProtectedRoute","isLoggedIn","state","authReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;AAEA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,UAAU,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,UAA5B,CAA9B,CADyB,CAGzB;;AACA,SACIA,UAAU,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAD9B;AAIH,CARD;;GAAMD,c;UACiBD,W;;;KADjBC,c;AAUN,eAAeA,cAAf","sourcesContent":["import React from \"react\"\r\n//Navigate - to navigate to a different Route \r\n//Outlet - allows you to do nested routes in App.js\r\nimport {Navigate, Outlet} from \"react-router-dom\"\r\n//useSelector - to access the store\r\nimport { useSelector } from \"react-redux\"  \r\n\r\n//check if user is logged in before giving access to the home route\r\n\r\n//https://www.youtube.com/watch?v=0x8Dap2EIVE\r\nconst ProtectedRoute = () => {  \r\n    const isLoggedIn = useSelector(state => state.authReducer.isLoggedIn)\r\n\r\n    //<Outlet> Allows you to do nested routes in App.js\r\n    return (\r\n        isLoggedIn ? <Outlet /> : <Navigate to={\"/login\"}/>\r\n\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}